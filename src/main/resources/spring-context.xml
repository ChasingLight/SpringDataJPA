<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>-->


    <!-- 以下为SpringMVC配置 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
           <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="writeAcceptCharset" value="false"/>  <!--用于避免响应头过大-->
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler/>

    <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>-->

    <!-- 自动扫描@Controller@Service@Repository注入为bean -->
    <context:component-scan base-package="org.jaden.jpa.**.controller,org.jaden.jpa.**.service,org.jaden.jpa.**.repository,
                                          spring.**.demo"/>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--配置MultipartResolver 用于处理上传文件-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="200000" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <!-- Spring线程池配置   begin -->
    <bean id="myTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="25" />
        <!-- 允许的空闲时间 设置为1分钟-->
        <property name="keepAliveSeconds" value="60" />
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="30" />
        <!-- 缓存队列 -->
        <property name="queueCapacity" value="15" />
        <!-- 对拒绝task的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
        <property name="WaitForTasksToCompleteOnShutdown" value="true" />
    </bean>
    <!-- Spring线程池配置   end -->

    <!-- redis config start -->
    <!--Jedis连接池的相关配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--新版是maxTotal，旧版是maxActive-->
        <property name="maxTotal">
            <value>${redis.pool.maxActive}</value>
        </property>
        <property name="maxIdle">
            <value>${redis.pool.maxIdle}</value>
        </property>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="${redis.host}" />
        <constructor-arg name="port" value="${redis.port}" type="int" />
        <constructor-arg name="timeout" value="${redis.timeout}" type="int" />
        <constructor-arg name="password" value="123456" /><!--显示设置密码为空-->
        <constructor-arg name="database" value="${redis.database}" type="int" />
    </bean>
    <!-- redis config end -->

    <import resource="spring-data-jpa.xml"/>

</beans>